[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "dragonsec"
version = "0.1.0"
description = "A comprehensive security scanning tool that combines static analysis with AI-powered vulnerability detection"
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
authors = [
    { name = "DragonSec Team", email = "team@dragonsec.com" }
]
dependencies = [
    # AI Providers
    "openai>=1.0.0",
    "google-generativeai>=0.3.0",
    "deepseek-ai>=0.1.0",
    "grok>=0.1.0",
    
    # Security Scanning
    "semgrep>=1.0.0",
    
    # Async Support
    "aiohttp>=3.9.1",
    
    # Utilities
    "python-dotenv>=1.0.0",
    "requests>=2.31.0",
    "pyyaml>=6.0.1",
    
    # Database
    "sqlite3-api>=2.0.1",
]

[project.optional-dependencies]
dev = [
    # Testing Framework
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.5",
    "pytest-cov>=6.0.0",
    
    # Code Quality
    "black>=24.0.0",
    "isort>=5.13.0",
    "flake8>=7.0.0",
    "mypy>=1.8.0",
]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=dragonsec --cov-report=term-missing"

[tool.black]
line-length = 100
target-version = ["py39"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true

[tool.coverage.run]
source = ["dragonsec"]
omit = ["tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]
ignore_errors = true
omit = ["tests/*"] 